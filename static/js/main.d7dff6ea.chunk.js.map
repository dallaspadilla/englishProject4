{"version":3,"sources":["AppMode.js","components/NavBar.js","components/SideMenu.js","components/FloatingButton.js","components/ModeBar.js","components/LoginPage.js","components/FeedInterests.js","components/FeedSchool.js","components/FeedPage.js","components/RoundsTable.js","components/RoundForm.js","components/Rounds.js","components/SearchBox.js","components/CoursesPage.js","components/AboutModal.js","components/App.js","reportWebVitals.js","index.js"],"names":["AppMode","LOGIN","FEED","FEED_INTERESTS","FEED_SCHOOL","ROUNDS","ROUNDS_LOGROUND","ROUNDS_EDITROUND","COURSES","Object","freeze","NavBar","getMenuBtnIcon","props","mode","menuOpen","handleMenuBtnClick","changeMode","toggleMenuOpen","className","onClick","this","modalOpen","id","title","React","Component","SideMenu","renderModeMenuItems","src","height","width","userId","FloatingButton","handleClick","LoginPage","handleSubmit","event","preventDefault","setUserId","emailInputRef","current","value","createRef","focus","onSubmit","htmlFor","style","padding","fontSize","ref","type","placeholder","pattern","required","FeedInterests","FeedSchool","fontStyle","FeedPage","class","RoundsTable","editRound","setEditId","confirmDelete","window","confirm","setDeleteId","renderTable","table","toSearch","length","r","push","rounds","date","Number","graphics","minutes","seconds","val","toUpperCase","course","indexOf","keys","colSpan","RoundForm","handleChange","name","target","newSec","newSGS","computeSGS","state","setState","SGS","newgraphics","newMin","faIcon","btnLabel","roundData","setTimeout","saveRound","min","sec","today","Date","now","getTimezoneOffset","toISOString","substr","gameplay","notes","startData","onChange","size","maxLength","max","disabled","rows","cols","Rounds","addRound","newData","data","JSON","parse","localStorage","getItem","games","gameCount","setItem","stringify","editId","deleteRound","deleteId","search","searchInput","icon","CoursesPage","AboutModal","closeAboutModal","toClose","href","modeTitle","modeToPage","App","handleChangeMode","newMode","openMenu","closeMenu","prevState","Id","openModal","closeModal","chooseItem","item","ModePage","logOut","sideChosen","showAbout","isOpen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7dff6ea.chunk.js","sourcesContent":["/* AppMode: The enumerated type for AppMode. */\r\n\r\nconst AppMode = {\r\n    LOGIN: \"LoginMode\",\r\n    FEED: \"FeedMode\",\r\n    FEED_INTERESTS: \"FeedMode-Interests\",\r\n    FEED_SCHOOL: \"FeedMode-School\",\r\n    ROUNDS: \"RoundsMode\",\r\n    ROUNDS_LOGROUND: \"RoundsMode-LogRound\",\r\n    ROUNDS_EDITROUND: \"RoundsMode-EditRound\",\r\n    COURSES: \"CoursesMode\"\r\n};\r\n\r\nObject.freeze(AppMode); //This ensures that the object is immutable.\r\n\r\nexport default AppMode;","import React from 'react';\r\nimport AppMode from '../AppMode';\r\n\r\nclass NavBar extends React.Component {\r\n\r\n  getMenuBtnIcon = () => {\r\n      if (this.props.mode === AppMode.ROUNDS_LOGROUND || \r\n          this.props.mode === AppMode.ROUNDS_EDITROUND)\r\n          return \"fa fa-arrow-left\";\r\n      if (this.props.menuOpen)\r\n        return \"fa fa-times\";\r\n      return \"fa fa-bars\";\r\n  }\r\n\r\n  handleMenuBtnClick = () => {\r\n    if (this.props.mode === AppMode.ROUNDS_LOGROUND ||\r\n        this.props.mode === AppMode.ROUNDS_EDITROUND) {\r\n      this.props.changeMode(AppMode.ROUNDS);\r\n    } else if (this.props.mode != AppMode.LOGIN) {\r\n      this.props.toggleMenuOpen();\r\n    }\r\n  }\r\n\r\n    \r\n  render() {\r\n    return (\r\n    <div className=\"navbar\">  \r\n    <span className=\"navbar-items\">\r\n      <button className=\"sidemenu-btn\" onClick={!this.props.modalOpen ? this.handleMenuBtnClick : null}>\r\n        <span id=\"menuBtnIcon\" className={\"sidemenu-btn-icon \" + this.getMenuBtnIcon()}>\r\n        </span>\r\n      </button>\r\n      <span className=\"navbar-title\">\r\n        &nbsp;{this.props.title}\r\n      </span>\r\n    </span>\r\n  </div>\r\n); \r\n}\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport AppMode from './../AppMode.js'\r\n\r\nclass SideMenu extends React.Component {\r\n\r\n//renderModeItems -- Renders correct subset of mode menu items based on\r\n//current mode, which is stored in this.prop.mode. Uses switch statement to\r\n//determine mode.\r\nrenderModeMenuItems = () => {\r\n  switch (this.props.mode) {\r\n    case AppMode.FEED:\r\n      return(\r\n        <div>\r\n        <a className=\"sidemenu-item\" onClick={() => this.props.changeMode(AppMode.FEED_INTERESTS)}>\r\n            <span className=\"fa fa-users\"></span>&nbsp;Sources</a>\r\n        </div>\r\n      );\r\n    break;\r\n    case AppMode.ROUNDS:\r\n      return(\r\n        <div>\r\n          <a className=\"sidemenu-item\" onClick={() => this.props.changeMode(AppMode.ROUNDS_LOGROUND)}>\r\n            <span className=\"fa fa-plus\"></span>&nbsp;Log New Game</a>\r\n          <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-search\"></span>&nbsp;Search Games</a>\r\n        </div>\r\n      );\r\n    break;\r\n    case AppMode.COURSES:\r\n      return(\r\n        <div>\r\n        <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-plus\"></span>&nbsp;Siblings</a>\r\n        <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-search\"></span>&nbsp;Pets</a>\r\n        </div>\r\n      );\r\n    default:\r\n        return null;\r\n    }\r\n}\r\n\r\n    render() {\r\n       return (\r\n        <div className={\"sidemenu \" + (this.props.menuOpen ? \"sidemenu-open\" : \"sidemenu-closed\")}\r\n             onClick={this.props.toggleMenuOpen}>\r\n          {/* SIDE MENU TITLE */}\r\n          <div className=\"sidemenu-title\">\r\n              <img src='http://tiny.cc/chrisprofilepic' height='50' width='50' />\r\n              <span id=\"userID\" className=\"sidemenu-userID\">&nbsp;{this.props.userId}</span>\r\n          </div>\r\n          {/* MENU CONTENT */}\r\n          <a className=\"sidemenu-item\" onClick={() => this.props.changeMode(AppMode.FEED)}>\r\n            <span className=\"fa fa-users\"></span>&nbsp;Home</a>\r\n          {this.renderModeMenuItems()}\r\n          {/* The following menu items are present regardless of mode */}\r\n        </div>\r\n       );\r\n    }\r\n}\r\n\r\nexport default SideMenu;\r\n","import React from 'react';\r\n\r\nclass FloatingButton extends React.Component {\r\n    render() {\r\n      return(\r\n        <div className=\"floatbtn\" onClick={this.props.handleClick}>\r\n          <span className=\"floatbtn-icon fa fa-plus\"></span>\r\n        </div>  \r\n      );\r\n    }\r\n}\r\n\r\nexport default FloatingButton;\r\n","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\n\r\nclass ModeBar extends React.Component {\r\n    render() {\r\n        return(\r\n          <div className={\"modebar\" + (this.props.mode === AppMode.LOGIN ? \r\n            \" invisible\" : (this.props.menuOpen ? \" ignore-click visible\" : \" visible\"))}>\r\n          <a className={(this.props.mode === AppMode.FEED ? \" item-selected\" : null)}\r\n              onClick={(this.props.mode === AppMode.ROUNDS_LOGROUND || this.props.mode === AppMode.ROUNDS_EDITROUND || this.menuOpen || this.props.modalOpen) ?\r\n               null : ()=>this.props.changeMode(AppMode.FEED)}>\r\n            <span className=\"modebaricon fa fa-th-list\"></span>\r\n            <span className=\"modebar-text\">About Me</span>\r\n          </a>\r\n          <a className={(this.props.mode === AppMode.ROUNDS ? \" item-selected\" : null)}\r\n             onClick={(this.props.mode === AppMode.ROUNDS_LOGROUND || this.props.mode === AppMode.ROUNDS_EDITROUND || this.menuOpen || this.props.modalOpen) ?\r\n              null : ()=>this.props.changeMode(AppMode.ROUNDS)}>\r\n            <span className=\"modebar-icon  fa fa-history\"></span>\r\n            <span className=\"modebar-text\">Games</span>\r\n          </a>\r\n          <a className={(this.props.mode === AppMode.COURSES ? \" item-selected\" : null)}\r\n            onClick={(this.props.mode === AppMode.ROUNDS_LOGROUND || this.props.mode === AppMode.ROUNDS_EDITROUND || this.menuOpen || this.props.modalOpen) ?\r\n              null : ()=>this.props.changeMode(AppMode.COURSES)}>\r\n            <span className=\"modebar-icon  fa fa-flag\"></span>\r\n            <span className=\"modebar-text\">Family</span>\r\n          </a> \r\n          </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default ModeBar;\r\n","import React from 'react';\r\nimport AppMode from \"./../AppMode.js\";\r\n\r\nclass LoginPage extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        //Create a ref for the email input DOM element\r\n        this.emailInputRef = React.createRef();\r\n      }\r\n    \r\n    //Focus cursor in email input field when mounted\r\n    componentDidMount() {\r\n        this.emailInputRef.current.focus();\r\n    }  \r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.changeMode(AppMode.FEED);\r\n        this.props.setUserId(this.emailInputRef.current.value);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n        <div id=\"login-mode-div\" className=\"padded-page\">\r\n        <center>\r\n            <h1 />\r\n            <form id=\"loginInterface\" onSubmit={this.handleSubmit}>\r\n            <label htmlFor=\"emailInput\" style={{ padding: 0, fontSize: 24 }}>\r\n                Email:\r\n                <input\r\n                ref={this.emailInputRef}\r\n                className=\"form-control login-text\"\r\n                type=\"email\"\r\n                placeholder=\"Enter Email Address\"\r\n                id=\"emailInput\"\r\n                pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                required={true}\r\n                />\r\n            </label>\r\n            <p />\r\n            <label htmlFor=\"passwordInput\" style={{ padding: 0, fontSize: 24 }}>\r\n                Password:\r\n                <input\r\n                className=\"form-control login-text\"\r\n                type=\"password\"\r\n                placeholder=\"Enter Password\"\r\n                pattern=\"[A-Za-z0-9!@#$%^&*()_+\\-]+\"\r\n                required={true}\r\n                />\r\n            </label>\r\n            <p className=\"bg-danger\" id=\"feedback\" style={{ fontSize: 16 }} />\r\n            <button\r\n                type=\"submit\"\r\n                className=\"btn-color-theme btn btn-primary btn-block login-btn\">\r\n                <span id=\"login-btn-icon\" className=\"fa fa-sign-in\"/>\r\n                &nbsp;Log In\r\n            </button>\r\n            <br />\r\n            <p>\r\n                <i>Version CptS 489 Sp20</i>\r\n            </p>\r\n            <p>\r\n                <i>© 2020 Professor of Speedgolf. All rights reserved.</i>\r\n            </p>\r\n            </form>\r\n        </center>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\n\r\nclass FeedInterests extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"padded-page\">\r\n            <center>\r\n            <h1 >Sources</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <p>(1) https://www.marketplace.org/2017/11/10/veteran-day-employment-jobs-numbers/.</p>\r\n            <p>(2) https://lvmf.syracuse.edu/article/the-employment-situation-of-veterans/</p>\r\n            <p>(Military One source) https://www.militaryonesource.mil/all-the-ways?gclid=CjwKCALAv4n9BRA9EiwA30WND_gZxO_RF4au_cAlODtQ4Z3kWseSPJqd-Gcx</p>\r\n            <p>(VA) https://www.va.gov/careers-employment/</p>\r\n            <p>(Career OneStop) https://www.careeronestop.org/Veterans/defualt.aspx</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }  \r\n}\r\n\r\nexport default FeedInterests;","import React from 'react';\r\n\r\nclass FeedSchool extends React.Component {\r\n    render() {\r\n        return (\r\n        <div className=\"padded-page\">\r\n            <center>\r\n            <h1 >Interests</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default FeedSchool;","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\nimport FeedInterests from './FeedInterests.js';\r\nimport FeedSchool from './FeedSchool.js';\r\n\r\nclass FeedPage extends React.Component {\r\n\r\n    render() {\r\n      switch(this.props.mode) {\r\n        case AppMode.FEED:\r\n          return (\r\n            <div className=\"padded-page\">\r\n              <div class=\"col-container\">\r\n                <div class=\"col\">\r\n                  <section>\r\n                    <article>\r\n                      <p>Many veterans have a hard time translating their military skills into civilian skills that are used in the workforce, leaving them jobless.</p>\r\n                      <p>Veterans often have difficulty translating their skills to the civilian workforce while creating resumes.</p>\r\n                    </article>\r\n                  </section>\r\n                </div>\r\n                  <div class=\"col\">\r\n                    <section>\r\n                      <article>\r\n                        <p>Veterans job skills are assessed to see how they apply to civilian jobs.</p>\r\n                        <p>Veterans are given information about education and training options.</p>\r\n                        <p>Help build veterans job-search skills.</p>\r\n                        <p>Help find government benefits including unemployment compensation for ex-service members.</p>\r\n                      </article>\r\n                    </section>\r\n                  </div>\r\n\r\n                  <div class=\"col\">\r\n                    <section>\r\n                      <article>\r\n                        <p>More than 10 million veterans are unemployed. (1)</p>\r\n                        <p>Veteran unemployment increases from 4.1 percent in March to 13.0 percent in April 2020 (2)</p>\r\n                      </article>\r\n                    </section>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ); \r\n          break;\r\n          case AppMode.FEED_INTERESTS:\r\n              return (\r\n                <FeedInterests mode={this.props.mode}/>\r\n              );\r\n              break;\r\n          case AppMode.FEED_SCHOOL:\r\n            return (\r\n              <FeedSchool mode={this.props.mode}/>\r\n              );\r\n              break; \r\n      }     \r\n    }   \r\n}\r\n\r\nexport default FeedPage;","import React from 'react';\r\nimport AppMode from './../AppMode.js';\r\n\r\nclass RoundsTable extends React.Component {\r\n\r\n  //editRound -- Triggered when the user clicks the edit button for a given\r\n  //round. The id param is the unique property that identifies the round.\r\n  //Set the state variable representing the id of the round to be edited and\r\n  //then switch to the ROUNDS_EDITROUND mode to allow the user to edit the\r\n  //chosen round.\r\n  editRound = (id) => {\r\n    this.props.setEditId(id);\r\n    this.props.changeMode(AppMode.ROUNDS_EDITROUND);\r\n  }\r\n\r\n  //confirmDelete -- Triggered when the user clicks the delete button\r\n  //for a given round. The id paam is the unique property that \r\n  //identifies the round. Set the state variable representing the id\r\n  //of the round to be deleted and then present a dialog box asking\r\n  //the user to confirm the deletion.\r\n  //TO DO: Implement the confirmation dialog box. For now, we\r\n  //present alert box placeholder\r\n  confirmDelete = (id) => {\r\n    var result = window.confirm(\"Want to delete?\");\r\n    if (result) {\r\n        this.props.setDeleteId(id);\r\n    }\r\n  }\r\n\r\n\r\n  //renderTable -- render an HTML table displaying the rounds logged\r\n  //by the current user and providing buttons to view/edit and delete each round.\r\n  renderTable = () => {\r\n  let table = [];\r\n\r\n  if (this.props.toSearch.length <= 1) { \r\n    for (const r in this.props.rounds) {\r\n      table.push(\r\n        <tr key={r}>\r\n          <td>{this.props.rounds[r].date}</td>\r\n          <td>{this.props.rounds[r].title}</td>\r\n          <td>{(Number(this.props.rounds[r].graphics) + \r\n                Number(this.props.rounds[r].minutes)) +\r\n                \":\" + this.props.rounds[r].seconds + \" (\" + \r\n                this.props.rounds[r].graphics + \r\n                \" in \" + this.props.rounds[r].minutes + \":\" + \r\n                this.props.rounds[r].seconds + \")\"}\r\n          </td>\r\n          <td><button onClick={this.props.menuOpen ? null : () => \r\n            this.editRound(r)}>\r\n                <span className=\"fa fa-eye\"></span></button></td>\r\n          <td><button onClick={this.props.menuOpen ? null : \r\n            () => this.confirmDelete(r)}>\r\n                <span className=\"fa fa-trash\"></span></button></td>\r\n        </tr> \r\n      );\r\n    }\r\n  }\r\n  else {\r\n    let val = this.props.toSearch.toUpperCase();\r\n    for (const r in this.props.rounds) {\r\n\r\n      if (this.props.rounds[r].course.toUpperCase().indexOf(val) > -1) {\r\n        table.push(\r\n          <tr key={r}>\r\n            <td>{this.props.rounds[r].date}</td>\r\n            <td>{this.props.rounds[r].title}</td>\r\n            <td>{(Number(this.props.rounds[r].graphics) + \r\n                  Number(this.props.rounds[r].minutes)) +\r\n                  \":\" + this.props.rounds[r].seconds + \" (\" + \r\n                  this.props.rounds[r].graphics + \r\n                  \" in \" + this.props.rounds[r].minutes + \":\" + \r\n                  this.props.rounds[r].seconds + \")\"}\r\n            </td>\r\n            <td><button onClick={this.props.menuOpen ? null : () => \r\n              this.editRound(r)}>\r\n                  <span className=\"fa fa-eye\"></span></button></td>\r\n            <td><button onClick={this.props.menuOpen ? null : \r\n              () => this.confirmDelete(r)}>\r\n                  <span className=\"fa fa-trash\"></span></button></td>\r\n          </tr> \r\n        );\r\n      } else {\r\n        \r\n      }\r\n    }\r\n  }\r\n  return table;\r\n  }\r\n\r\n  //render--render the entire rounds table with header, displaying a \"No\r\n  //Rounds Logged\" message in case the table is empty.\r\n  render() {\r\n    return(\r\n    <div className=\"padded-page\">\r\n      <h1></h1>\r\n      <table className=\"table table-hover\">\r\n        <thead className=\"thead-light\">\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Game Title</th>\r\n          <th>Rating</th>\r\n          <th>View/Edit...</th>\r\n          <th>Delete</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.keys(this.props.rounds).length === 0 ? \r\n          <tr>\r\n          <td colSpan=\"5\" style={{fontStyle: \"italic\"}}>No rounds logged</td>\r\n          </tr> : this.renderTable()\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RoundsTable;\r\n","import React from 'react';\r\nimport AppMode from './../AppMode.js';\r\n\r\nclass RoundForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //Create date object for today, taking time zone into consideration\r\n        let today = new Date(Date.now()-(new Date()).getTimezoneOffset()*60000);\r\n        //store date as ISO string\r\n        if (this.props.mode === AppMode.ROUNDS_LOGROUND) {\r\n            //If logging a new round, the starting state is a default round with\r\n            //today's date.\r\n            this.state = {date:  today.toISOString().substr(0,10), \r\n                        title: \"\",\r\n                        type: \"campaign\",\r\n                        gameplay: \"5\",\r\n                        graphics: 10,\r\n                        minutes: 50,\r\n                        seconds: \"00\",\r\n                        notes: \"\",\r\n                        faIcon: \"fa fa-save\",\r\n                        btnLabel: \"Save Game Data\"}\r\n        } else {\r\n            //if editing an existing round, the starting state is the round's\r\n            //current data\r\n            this.state = this.props.startData;\r\n            this.state.faIcon = \"fa fa-edit\";\r\n            this.state.btnLabel = \"Update Game Data\";\r\n        }\r\n    }\r\n  \r\n  \r\n    handleChange = (event) => {\r\n        const name = event.target.name;\r\n        if (name === \"seconds\") {\r\n          let newSec = (event.target.value.length < 2 ? \"0\" + \r\n            event.target.value : event.target.value);\r\n          let newSGS = this.computeSGS(this.state.graphics, this.state.minutes, \r\n                                       newSec);\r\n          this.setState({seconds: newSec, SGS: newSGS});\r\n        } else if (name === \"graphics\") {\r\n          let newgraphics = event.target.value;\r\n          let newSGS = this.computeSGS(newgraphics, this.state.minutes, \r\n            this.state.seconds);\r\n          this.setState({graphics: newgraphics, SGS: newSGS});\r\n        } else if (name === \"minutes\") {\r\n            let newMin = event.target.value;\r\n            let newSGS = this.computeSGS(this.state.graphics, newMin, \r\n              this.state.seconds);\r\n            this.setState({minutes: newMin, SGS: newSGS});\r\n        } else {\r\n          this.setState({[name]: event.target.value});\r\n        }\r\n    }\r\n  \r\n  \r\n    //handleSubmit -- When the user clicks on the button to save/update the\r\n    //round, start the spinner and invoke the parent component's saveRound\r\n    //method to do the actual work. Note that saveRound is set to the correct\r\n    //parent method based on whether the user is logging a new round or editing\r\n    //an existing round.\r\n    handleSubmit = (event) => {\r\n        //start spinner\r\n        this.setState({faIcon: \"fa fa-spin fa-spinner\",\r\n                        btnLabel: (this.props.mode === AppMode.ROUNDS_LOGROUND ? \r\n                                    \"Saving...\" : \"Updating...\")});\r\n        //Prepare current round data to be saved\r\n        let roundData = this.state;\r\n        delete roundData.faIcon;\r\n        delete roundData.btnLabel;\r\n        //call saveRound on 1 second delay to show spinning icon\r\n        setTimeout(this.props.saveRound,1000,roundData); \r\n        event.preventDefault(); \r\n        }\r\n  \r\n\r\n    computeSGS = (graphics, min, sec) => {\r\n      return (Number(graphics) + Number(min)) \r\n                  + \":\" + sec;\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <form className=\"padded-page\" onSubmit={this.handleSubmit}>\r\n          <center>\r\n            <label>\r\n              Date:\r\n              <input name=\"date\" className=\"form-control form-center\" \r\n                type=\"date\" value={this.state.date} onChange={this.handleChange} />\r\n            </label>\r\n            <p></p>\r\n            <label>\r\n              Game Title:\r\n              <input name=\"title\" className=\"form-control form-center\" type=\"text\"\r\n                value={this.state.title} onChange={this.handleChange}\r\n                placeholder=\"Game Title\" size=\"50\" maxLength=\"50\" />\r\n            </label>\r\n          <p></p>\r\n          <label>Type:\r\n          <select name=\"type\" value={this.state.type} \r\n            className=\"form-control form-center\" onChange={this.handleChange}>\r\n            <option value=\"campaign\">Campaign</option>\r\n            <option value=\"multiplayer\">multiplayer</option>\r\n          </select> \r\n          </label>\r\n          <p></p>\r\n          <label>Gameplay:\r\n          <select name=\"gameplay\" value={this.state.gameplay} \r\n            className=\"form-control form-center\" onChange={this.handleChange}>\r\n            <option value=\"1\">1</option>\r\n            <option value=\"2\">2</option>\r\n            <option value=\"3\">3</option>\r\n            <option value=\"4\">4</option>\r\n            <option value=\"5\">5</option>\r\n          </select> \r\n          </label>\r\n          <p></p>\r\n          <label>Graphics:\r\n          <input name=\"graphics\" className=\"form-control form-center\" type=\"number\" \r\n            min=\"1\" max=\"10\" value={this.state.graphics} \r\n            onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <label>Time: <br></br>\r\n          <input name=\"minutes\" type=\"number\" size=\"3\"\r\n            min=\"10\" max=\"400\" value={this.state.minutes}\r\n            onChange={this.handleChange} />:  \r\n          <input name=\"seconds\" type=\"number\" size=\"2\"\r\n            min=\"0\" max=\"60\" value={this.state.seconds} \r\n            onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <label>Game Score: <br></br>\r\n              <input name=\"SGS\" className=\"form-center\" type=\"text\" size=\"6\" \r\n                disabled={true} value={this.state.SGS} />\r\n          </label>\r\n          <p></p>\r\n          <label>Notes:\r\n              <textarea name=\"notes\" className=\"form-control\" rows=\"6\" cols=\"75\" \r\n                placeholder=\"Enter round notes\" value={this.state.notes} \r\n                onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <p></p>\r\n          <button type=\"submit\" style={{width: \"70%\",fontSize: \"36px\"}} \r\n            className=\"btn btn-primary btn-color-theme login-btn\">\r\n              <span className={this.state.faIcon}/>&nbsp;{this.state.btnLabel}\r\n          </button>\r\n          </center>\r\n        </form>\r\n      );\r\n    }\r\n}\r\n\r\nexport default RoundForm;","//Rounds -- A parent component for the app's \"rounds\" mode.\r\n//Manages the rounds data for the current user and conditionally renders the\r\n//appropriate rounds mode page based on App's mode, which is passed in as a prop.\r\n\r\nimport React from 'react';\r\nimport AppMode from './../AppMode.js';\r\nimport RoundsTable from './RoundsTable.js';\r\nimport RoundForm from './RoundForm.js';\r\nimport FloatingButton from './FloatingButton.js';\r\nimport SearchBox from './SearchBox.js';\r\n\r\nclass Rounds extends React.Component {\r\n\r\n    //Initialize a Rounds object based on local storage\r\n    constructor(props) {\r\n            super(props);\r\n            let data = JSON.parse(localStorage.getItem(this.props.userId)); \r\n            if (data == null) { //no data yet for this user -- create empty record\r\n                data = {games: {},\r\n                        gameCount: 0};  \r\n                localStorage.setItem(this.props.userId,JSON.stringify(data));\r\n            }\r\n            this.state = {games: data.games,\r\n                          gameCount: data.gameCount,\r\n                          deleteId: \"\",\r\n                          editId: \"\",\r\n                          searchInput: \"\"};           \r\n        }\r\n\r\n    //addRound -- Given an object newData containing a new round, add the round\r\n    //to the current user's list of rounds, commit to local storage, and toggle\r\n    //the mode back to AppMode.ROUNDS since the user is done adding a round.\r\n    addRound = (newData) => {\r\n        let data = JSON.parse(localStorage.getItem(this.props.userId));\r\n        data.games[++data.gameCount] = newData;\r\n        localStorage.setItem(this.props.userId, JSON.stringify(data));\r\n        this.setState({games: data.games, gameCount: data.gameCount});\r\n        this.props.changeMode(AppMode.ROUNDS);\r\n    }\r\n\r\n    //editRound -- Given an object newData containing updated data on an\r\n    //existing round, update the current user's round uniquely identified by\r\n    //this.state.editId, commit to local storage, reset editId to empty and\r\n    //toggle the mode back to AppMode.ROUNDS since the user is done editing the\r\n    //round. \r\n    editRound = (newData) => {\r\n        let data = JSON.parse(localStorage.getItem(this.props.userId)); \r\n        data.games[this.state.editId] = newData;\r\n        localStorage.setItem(this.props.userId, JSON.stringify(data));\r\n        this.setState({games: data.games, editId: \"\"});\r\n        this.props.changeMode(AppMode.ROUNDS);\r\n    }\r\n\r\n    //deleteRound -- Delete the current user's round uniquely identified by\r\n    //this.state.deleteId, commit to local storage, and reset deleteId to empty.\r\n    deleteRound = (val) => {\r\n        let data = JSON.parse(localStorage.getItem(this.props.userId));\r\n        delete data.games[val];\r\n        data.gameCount = data.gameCount - 1;\r\n        localStorage.setItem(this.props.userId,JSON.stringify(data));\r\n        this.setState({games: data.games, deleteId: \"\"});\r\n    }  \r\n\r\n    //setDeleteId -- Capture in this.state.deleteId the unique id of the item\r\n    //the user is considering deleting.\r\n    setDeleteId = (val) => {\r\n        this.setState({deleteId: val});\r\n        this.deleteRound(val);\r\n    }\r\n\r\n    //setEditId -- Capture in this.state.editId the unique id of the item\r\n    //the user is considering editing.\r\n    setEditId = (val) => {\r\n        this.setState({editId: val});\r\n    }\r\n\r\n    search = (val) => {\r\n        this.setState({searchInput: val});\r\n    }\r\n    \r\n    //render -- Conditionally render the Rounds mode page as either the rounds\r\n    //table, the rounds form set to obtain a new round, or the rounds form set\r\n    //to edit an existing round.\r\n    render() {\r\n        switch(this.props.mode) {\r\n            case AppMode.ROUNDS:\r\n                return (\r\n                    <>\r\n                    <RoundsTable \r\n                    rounds={this.state.games}\r\n                    setEditId={this.setEditId}\r\n                    setDeleteId={this.setDeleteId}\r\n                    changeMode={this.props.changeMode}\r\n                    menuOpen={this.props.menuOpen}\r\n                    toSearch = {this.state.searchInput} /> \r\n                    <FloatingButton\r\n                        handleClick={() => \r\n                        this.props.changeMode(AppMode.ROUNDS_LOGROUND)}\r\n                        menuOpen={this.props.menuOpen}\r\n                        icon={\"fa fa-plus\"} />\r\n                    </>\r\n                );\r\n            case AppMode.ROUNDS_LOGROUND:\r\n                return (\r\n                    <RoundForm\r\n                        mode={this.props.mode}\r\n                        startData={\"\"} \r\n                        saveRound={this.addRound} />\r\n                );\r\n            case AppMode.ROUNDS_EDITROUND:\r\n                return (\r\n                    <RoundForm\r\n                        mode={this.props.mode}\r\n                        startData={this.state.games[this.state.editId]} \r\n                        saveRound={this.editRound} />\r\n                );\r\n        }\r\n    }\r\n\r\n}   \r\n\r\nexport default Rounds;\r\n","import React from 'react';\r\n\r\nclass SearchBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n            this.state = {\r\n                searchValue : \"\"\r\n            }\r\n\r\n    }\r\n    handleChange = (event) => {\r\n        const name = event.target.name;\r\n        this.setState({[name]: event.target.value});\r\n        this.props.search(this.state.searchValue);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"input-group center-search\" style={{marginTop : \"70px\"}}>\r\n            <input name=\"searchValue\" className=\"form-control py-2 border-left-0 border\" type=\"text\" value={this.state.searchValue} onChange={this.handleChange} placeholder=\"Search Rounds\"></input>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nclass CoursesPage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"padded-page\">\r\n            <center>\r\n            <h1 >Family</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default CoursesPage;","import React from 'react';\r\n\r\nclass AboutModal extends React.Component {\r\n\r\n    closeAboutModal = () => {\r\n        this.props.toClose();\r\n      }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"mymodal\" >\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <center>\r\n                    <h3 className=\"modal-title\"><b>About SpeedScore</b>\r\n                        <button id=\"modalClose\" className=\"close\" onClick={this.closeAboutModal}>\r\n                        &times;</button>\r\n                    </h3>\r\n                    </center>      \r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <center>\r\n                    <img\r\n                    src=\"https://dl.dropboxusercontent.com/s/awuwr1vpuw1lkyl/SpeedScore4SplashLogo.png\"\r\n                    height=\"200\" width=\"200\"></img>\r\n                    <h3>The World's First and Only Suite of Apps for\r\n                    Speedgolf</h3>\r\n                    <p>Version 5 (Live), Build\r\n                    20.6.2018<br></br>\r\n                    &copy; 2017-20 The Professor of Speedgolf. All rights\r\n                    reserved.</p>\r\n                    </center>\r\n                    <p>SpeedScore apps support</p>\r\n                    <ul>\r\n                    <li>live touranment scoring (<i>SpeedScore Live&reg;</i>)</li>\r\n                    <li>tracking personal speedgolf rounds and sharing results\r\n                    (<i>SpeedScore Track&reg;</i>)</li>\r\n                    <li>finding speedgolf-friendly courses, booking tee times, and\r\n                    paying to play speedgolf by the minute (<i>SpeedScore\r\n                    Play&reg;</i>)</li>\r\n                    </ul>\r\n                    <p>SpeedScore was first developed by Dr. Chris Hundhausen,\r\n                    associate professor of computer science at Washington State\r\n                    University and the <i>Professor of Speedgolf</i>, with support\r\n                    from Scott Dawley, CEO of Speedgolf USA, LLC. It leverages\r\n                    Google server-side technologies.</p>\r\n                    <p>For more information on SpeedScore, visit <a\r\n                    href=\"http://speedscore.live\" target=\"_blank\">SpeedScore's web\r\n                    site</a>. For more information on speedgolf, visit <a\r\n                    href=\"http://playspeedgolf.com\"\r\n                    target=\"_blank\">playspeedgolf.com</a> and <a\r\n                    href=\"http://usaspeedgolf.com\" target=\"_blank\">Speedgolf\r\n                    USA</a>.</p>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                        <button id=\"aboutOK\" className=\"close\" onClick={this.closeAboutModal}>\r\n                        OK</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default AboutModal\r\n","import React from 'react';\r\nimport NavBar from './NavBar.js';\r\nimport SideMenu from './SideMenu.js';\r\nimport ModeBar from './ModeBar.js';\r\nimport FloatingButton from './FloatingButton.js';\r\nimport LoginPage from './LoginPage.js';\r\nimport AppMode from \"./../AppMode.js\"\r\nimport FeedPage from './FeedPage.js';\r\nimport Rounds from './Rounds.js';\r\nimport CoursesPage from './CoursesPage.js';\r\nimport Modal from 'react-modal';\r\nimport AboutModal from './AboutModal.js';\r\n\r\n\r\nconst modeTitle = {};\r\nmodeTitle[AppMode.LOGIN] = \"Welcome\";\r\nmodeTitle[AppMode.FEED] = \"About me\";\r\nmodeTitle[AppMode.FEED_INTERESTS] = \"Interests\";\r\nmodeTitle[AppMode.FEED_SCHOOL] = \"School\";\r\nmodeTitle[AppMode.ROUNDS] = \"Games\";\r\nmodeTitle[AppMode.ROUNDS_LOGROUND] = \"Log New Game\";\r\nmodeTitle[AppMode.ROUNDS_EDITROUND] = \"Edit Game\";\r\nmodeTitle[AppMode.COURSES] = \"Family\";\r\n\r\nconst modeToPage = {};\r\nmodeToPage[AppMode.LOGIN] = LoginPage;\r\nmodeToPage[AppMode.FEED] = FeedPage;\r\nmodeToPage[AppMode.FEED_INTERESTS] = FeedPage;\r\nmodeToPage[AppMode.FEED_SCHOOL] = FeedPage;\r\nmodeToPage[AppMode.ROUNDS] = Rounds;\r\nmodeToPage[AppMode.ROUNDS_LOGROUND] = Rounds;\r\nmodeToPage[AppMode.ROUNDS_EDITROUND] = Rounds;\r\nmodeToPage[AppMode.COURSES] = CoursesPage;\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {mode: AppMode.FEED,\r\n                  menuOpen: false,\r\n                  userId: \"\",\r\n                  modalOpen: false};\r\n  }\r\n\r\n  handleChangeMode = (newMode) => {\r\n    this.setState({mode: newMode});\r\n  }\r\n\r\n  openMenu = () => {\r\n    this.setState({menuOpen : true});\r\n  }\r\n  \r\n  closeMenu = () => {\r\n    this.setState({menuOpen : false});\r\n  }\r\n\r\n  toggleMenuOpen = () => {\r\n    this.setState(prevState => ({menuOpen: !prevState.menuOpen}));\r\n  }\r\n\r\n  setUserId = (Id) => {\r\n    this.setState({userId: Id});\r\n  }\r\n\r\n  openModal = () => {\r\n    this.setState({modalOpen : true});\r\n  }\r\n  \r\n  closeModal = () => {\r\n    this.setState({modalOpen : false});\r\n  }\r\n  chooseItem = (item ) => {\r\n    if(item == \"About\") {\r\n      this.openModal();\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const ModePage = modeToPage[this.state.mode];\r\n    return (\r\n      <div  height=\"100%\">\r\n        <NavBar \r\n          title={\"Reintegrating Veterans into Civilian Workforce\"} \r\n          mode={this.state.mode}\r\n          changeMode={this.handleChangeMode}\r\n          menuOpen={this.state.menuOpen}\r\n          modalOpen = {this.state.modalOpen}\r\n          toggleMenuOpen={this.toggleMenuOpen}/>\r\n          <SideMenu \r\n            menuOpen = {this.state.menuOpen}\r\n            modalOpen = {this.state.modalOpen}\r\n            mode={this.state.mode}\r\n            changeMode={this.handleChangeMode}\r\n            toggleMenuOpen={this.toggleMenuOpen}\r\n            userId={this.state.userId}\r\n            logOut={() => this.handleChangeMode(AppMode.LOGIN)}\r\n            sideChosen={this.chooseItem}\r\n            showAbout = {() => this.openModal}/>\r\n          <ModePage \r\n            menuOpen={this.state.menuOpen}\r\n            modalOpen = {this.state.modalOpen}\r\n            mode={this.state.mode}\r\n            changeMode={this.handleChangeMode}\r\n            userId={this.state.userId}\r\n            setUserId={this.setUserId}/>\r\n            {this.state.modalOpen ? \r\n            <AboutModal \r\n            isOpen={this.state.modalOpen}\r\n            toClose ={this.closeModal} /> : null }\r\n\r\n\r\n      </div>\r\n    );  \r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './styles/index.css';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}