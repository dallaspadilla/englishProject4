{"version":3,"sources":["AppMode.js","components/NavBar.js","components/SideMenu.js","components/ModeBar.js","components/FloatingButton.js","components/LoginPage.js","components/FeedInterests.js","components/FeedSchool.js","components/FeedPage.js","components/RoundsTable.js","components/RoundForm.js","components/SearchBox.js","components/Rounds.js","components/CoursesPage.js","components/App.js","serviceWorker.js","index.js"],"names":["AppMode","LOGIN","FEED","FEED_INTERESTS","FEED_SCHOOL","ROUNDS","ROUNDS_LOGROUND","ROUNDS_EDITROUND","COURSES","Object","freeze","NavBar","getMenuBtnIcon","props","mode","menuOpen","handleMenuBtnClick","changeMode","toggleMenuOpen","className","onClick","this","modalOpen","id","src","alt","height","width","title","React","Component","SideMenu","renderModeMenuItems","userId","sideChosen","bind","logOut","ModeBar","FloatingButton","handleClick","LoginPage","handleSubmit","event","preventDefault","setUserId","emailInputRef","current","value","createRef","focus","onSubmit","htmlFor","style","padding","fontSize","ref","type","placeholder","pattern","required","FeedInterests","fontStyle","FeedSchool","FeedPage","align","RoundsTable","editRound","setEditId","confirmDelete","window","confirm","setDeleteId","renderTable","table","toSearch","length","r","push","key","rounds","date","Number","graphics","minutes","seconds","val","toUpperCase","course","indexOf","keys","colSpan","RoundForm","handleChange","name","target","newSec","newSGS","computeSGS","state","setState","SGS","newgraphics","newMin","faIcon","btnLabel","roundData","setTimeout","saveRound","min","sec","today","Date","now","getTimezoneOffset","toISOString","substr","gameplay","notes","startData","onChange","size","maxLength","max","disabled","rows","cols","SearchBox","search","searchValue","marginTop","Rounds","addRound","newData","data","JSON","parse","localStorage","getItem","games","gameCount","setItem","stringify","editId","deleteRound","console","log","deleteId","searchInput","icon","CoursesPage","modeTitle","modeToPage","App","handleChangeMode","newMode","openMenu","closeMenu","prevState","Id","openModal","closeModal","chooseItem","item","ModePage","showAbout","isOpen","onRequestClose","contentLabel","overlayClassName","closeTimeoutMS","role","href","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d89dd891.chunk.js","sourcesContent":["/* AppMode: The enumerated type for AppMode. */\r\n\r\nconst AppMode = {\r\n    LOGIN: \"LoginMode\",\r\n    FEED: \"FeedMode\",\r\n    FEED_INTERESTS: \"FeedMode-Interests\",\r\n    FEED_SCHOOL: \"FeedMode-School\",\r\n    ROUNDS: \"RoundsMode\",\r\n    ROUNDS_LOGROUND: \"RoundsMode-LogRound\",\r\n    ROUNDS_EDITROUND: \"RoundsMode-EditRound\",\r\n    COURSES: \"CoursesMode\"\r\n};\r\n\r\nObject.freeze(AppMode); //This ensures that the object is immutable.\r\n\r\nexport default AppMode;","import React from 'react';\r\nimport AppMode from '../AppMode';\r\n\r\nclass NavBar extends React.Component {\r\n\r\n  getMenuBtnIcon = () => {\r\n      if (this.props.mode === AppMode.ROUNDS_LOGROUND || \r\n          this.props.mode === AppMode.ROUNDS_EDITROUND)\r\n          return \"fa fa-arrow-left\";\r\n      if (this.props.menuOpen)\r\n        return \"fa fa-times\";\r\n      return \"fa fa-bars\";\r\n  }\r\n\r\n  handleMenuBtnClick = () => {\r\n    if (this.props.mode === AppMode.ROUNDS_LOGROUND ||\r\n        this.props.mode === AppMode.ROUNDS_EDITROUND) {\r\n      this.props.changeMode(AppMode.ROUNDS);\r\n    } else if (this.props.mode != AppMode.LOGIN) {\r\n      this.props.toggleMenuOpen();\r\n    }\r\n  }\r\n\r\n    \r\n  render() {\r\n    return (\r\n    <div className=\"navbar\">  \r\n    <span className=\"navbar-items\">\r\n      <button className=\"sidemenu-btn\" onClick={!this.props.modalOpen ? this.handleMenuBtnClick : null}>\r\n        <span id=\"menuBtnIcon\" className={\"sidemenu-btn-icon \" + this.getMenuBtnIcon()}>\r\n        </span>\r\n      </button>\r\n      <img src=\"http://tiny.cc/sslogo\" alt=\"Speed Score Logo\" height=\"38px\"\r\n      width=\"38px\" />\r\n      <span className=\"navbar-title\">\r\n        &nbsp;{this.props.title}\r\n      </span>\r\n    </span>\r\n  </div>\r\n); \r\n}\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport AppMode from './../AppMode.js'\r\n\r\nclass SideMenu extends React.Component {\r\n\r\n//renderModeItems -- Renders correct subset of mode menu items based on\r\n//current mode, which is stored in this.prop.mode. Uses switch statement to\r\n//determine mode.\r\nrenderModeMenuItems = () => {\r\n  switch (this.props.mode) {\r\n    case AppMode.FEED:\r\n      return(\r\n        <div>\r\n        <a className=\"sidemenu-item\" onClick={() => this.props.changeMode(AppMode.FEED_INTERESTS)}>\r\n            <span className=\"fa fa-users\"></span>&nbsp;Interests</a>\r\n        <a className=\"sidemenu-item \" onClick={() => this.props.changeMode(AppMode.FEED_SCHOOL)}>\r\n            <span className=\"fa fa-search\"></span>&nbsp;School</a>\r\n        </div>\r\n      );\r\n    break;\r\n    case AppMode.ROUNDS:\r\n      return(\r\n        <div>\r\n          <a className=\"sidemenu-item\" onClick={() => this.props.changeMode(AppMode.ROUNDS_LOGROUND)}>\r\n            <span className=\"fa fa-plus\"></span>&nbsp;Log New Game</a>\r\n          <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-search\"></span>&nbsp;Search Games</a>\r\n        </div>\r\n      );\r\n    break;\r\n    case AppMode.COURSES:\r\n      return(\r\n        <div>\r\n        <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-plus\"></span>&nbsp;Siblings</a>\r\n        <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-search\"></span>&nbsp;Pets</a>\r\n        </div>\r\n      );\r\n    default:\r\n        return null;\r\n    }\r\n}\r\n\r\n    render() {\r\n       return (\r\n        <div className={\"sidemenu \" + (this.props.menuOpen ? \"sidemenu-open\" : \"sidemenu-closed\")}\r\n             onClick={this.props.toggleMenuOpen}>\r\n          {/* SIDE MENU TITLE */}\r\n          <div className=\"sidemenu-title\">\r\n              <img src='http://tiny.cc/chrisprofilepic' height='50' width='50' />\r\n              <span id=\"userID\" className=\"sidemenu-userID\">&nbsp;{this.props.userId}</span>\r\n          </div>\r\n          {/* MENU CONTENT */}\r\n          {this.renderModeMenuItems()}\r\n          {/* The following menu items are present regardless of mode */}\r\n          <a id=\"aboutBtn\" className=\"sidemenu-item\" onClick={this.props.sideChosen.bind(this, \"About\")}>\r\n            <span className=\"fa fa-info-circle\"></span>&nbsp;About</a>\r\n          <a id=\"logOutBtn\" className=\"sidemenu-item\" onClick={this.props.logOut}>\r\n            <span className=\"fa fa-sign-out-alt\"></span>&nbsp;Log Out</a>\r\n        </div>\r\n       );\r\n    }\r\n}\r\n\r\nexport default SideMenu;\r\n","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\n\r\nclass ModeBar extends React.Component {\r\n    render() {\r\n        return(\r\n          <div className={\"modebar\" + (this.props.mode === AppMode.LOGIN ? \r\n            \" invisible\" : (this.props.menuOpen ? \" ignore-click visible\" : \" visible\"))}>\r\n          <a className={(this.props.mode === AppMode.FEED ? \" item-selected\" : null)}\r\n              onClick={(this.props.mode === AppMode.ROUNDS_LOGROUND || this.props.mode === AppMode.ROUNDS_EDITROUND || this.menuOpen || this.props.modalOpen) ?\r\n               null : ()=>this.props.changeMode(AppMode.FEED)}>\r\n            <span className=\"modebaricon fa fa-th-list\"></span>\r\n            <span className=\"modebar-text\">About Me</span>\r\n          </a>\r\n          <a className={(this.props.mode === AppMode.ROUNDS ? \" item-selected\" : null)}\r\n             onClick={(this.props.mode === AppMode.ROUNDS_LOGROUND || this.props.mode === AppMode.ROUNDS_EDITROUND || this.menuOpen || this.props.modalOpen) ?\r\n              null : ()=>this.props.changeMode(AppMode.ROUNDS)}>\r\n            <span className=\"modebar-icon  fa fa-history\"></span>\r\n            <span className=\"modebar-text\">Games</span>\r\n          </a>\r\n          <a className={(this.props.mode === AppMode.COURSES ? \" item-selected\" : null)}\r\n            onClick={(this.props.mode === AppMode.ROUNDS_LOGROUND || this.props.mode === AppMode.ROUNDS_EDITROUND || this.menuOpen || this.props.modalOpen) ?\r\n              null : ()=>this.props.changeMode(AppMode.COURSES)}>\r\n            <span className=\"modebar-icon  fa fa-flag\"></span>\r\n            <span className=\"modebar-text\">Family</span>\r\n          </a> \r\n          </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default ModeBar;\r\n","import React from 'react';\r\n\r\nclass FloatingButton extends React.Component {\r\n    render() {\r\n      return(\r\n        <div className=\"floatbtn\" onClick={this.props.handleClick}>\r\n          <span className=\"floatbtn-icon fa fa-plus\"></span>\r\n        </div>  \r\n      );\r\n    }\r\n}\r\n\r\nexport default FloatingButton;\r\n","import React from 'react';\r\nimport AppMode from \"./../AppMode.js\";\r\n\r\nclass LoginPage extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        //Create a ref for the email input DOM element\r\n        this.emailInputRef = React.createRef();\r\n      }\r\n    \r\n    //Focus cursor in email input field when mounted\r\n    componentDidMount() {\r\n        this.emailInputRef.current.focus();\r\n    }  \r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.changeMode(AppMode.FEED);\r\n        this.props.setUserId(this.emailInputRef.current.value);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n        <div id=\"login-mode-div\" className=\"padded-page\">\r\n        <center>\r\n            <h1 />\r\n            <form id=\"loginInterface\" onSubmit={this.handleSubmit}>\r\n            <label htmlFor=\"emailInput\" style={{ padding: 0, fontSize: 24 }}>\r\n                Email:\r\n                <input\r\n                ref={this.emailInputRef}\r\n                className=\"form-control login-text\"\r\n                type=\"email\"\r\n                placeholder=\"Enter Email Address\"\r\n                id=\"emailInput\"\r\n                pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                required={true}\r\n                />\r\n            </label>\r\n            <p />\r\n            <label htmlFor=\"passwordInput\" style={{ padding: 0, fontSize: 24 }}>\r\n                Password:\r\n                <input\r\n                className=\"form-control login-text\"\r\n                type=\"password\"\r\n                placeholder=\"Enter Password\"\r\n                pattern=\"[A-Za-z0-9!@#$%^&*()_+\\-]+\"\r\n                required={true}\r\n                />\r\n            </label>\r\n            <p className=\"bg-danger\" id=\"feedback\" style={{ fontSize: 16 }} />\r\n            <button\r\n                type=\"submit\"\r\n                className=\"btn-color-theme btn btn-primary btn-block login-btn\">\r\n                <span id=\"login-btn-icon\" className=\"fa fa-sign-in\"/>\r\n                &nbsp;Log In\r\n            </button>\r\n            <br />\r\n            <p>\r\n                <i>Version CptS 489 Sp20</i>\r\n            </p>\r\n            <p>\r\n                <i>© 2020 Professor of Speedgolf. All rights reserved.</i>\r\n            </p>\r\n            </form>\r\n        </center>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\n\r\nclass FeedInterests extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"padded-page\">\r\n            <center>\r\n            <h1 >Interests</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }  \r\n}\r\n\r\nexport default FeedInterests;","import React from 'react';\r\n\r\nclass FeedSchool extends React.Component {\r\n    render() {\r\n        return (\r\n        <div className=\"padded-page\">\r\n            <center>\r\n            <h1 >Interests</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default FeedSchool;","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\nimport FeedInterests from './FeedInterests.js';\r\nimport FeedSchool from './FeedSchool.js';\r\n\r\nclass FeedPage extends React.Component {\r\n\r\n    render() {\r\n      switch(this.props.mode) {\r\n        case AppMode.FEED:\r\n          return (\r\n          <div className=\"padded-page\">\r\n              <h1 align=\"center\"><br></br></h1>\r\n              <section>\r\n                <article>\r\n                  <h1>About Me</h1>\r\n                  <p>\"The way to get started is to quit talking and begin doing.\" -Walt Disney</p>\r\n                  <p>\"Whoever is happy will make others happy too.\" -Anne Frank</p>\r\n                  <p>\"You have brains in your head. You have feet in your shoes. You can steer yourself any direction you choose.\" -Dr. Seuss</p>\r\n                </article>\r\n              </section>\r\n          </div>\r\n          );\r\n        break;\r\n        case AppMode.FEED_INTERESTS:\r\n            return (\r\n              <FeedInterests mode={this.props.mode}/>\r\n            );\r\n            break;\r\n        case AppMode.FEED_SCHOOL:\r\n          return (\r\n            <FeedSchool mode={this.props.mode}/>\r\n            );\r\n            break;\r\n      }\r\n        \r\n    }   \r\n}\r\n\r\nexport default FeedPage;","import React from 'react';\r\nimport AppMode from './../AppMode.js';\r\n\r\nclass RoundsTable extends React.Component {\r\n\r\n  //editRound -- Triggered when the user clicks the edit button for a given\r\n  //round. The id param is the unique property that identifies the round.\r\n  //Set the state variable representing the id of the round to be edited and\r\n  //then switch to the ROUNDS_EDITROUND mode to allow the user to edit the\r\n  //chosen round.\r\n  editRound = (id) => {\r\n    this.props.setEditId(id);\r\n    this.props.changeMode(AppMode.ROUNDS_EDITROUND);\r\n  }\r\n\r\n  //confirmDelete -- Triggered when the user clicks the delete button\r\n  //for a given round. The id paam is the unique property that \r\n  //identifies the round. Set the state variable representing the id\r\n  //of the round to be deleted and then present a dialog box asking\r\n  //the user to confirm the deletion.\r\n  //TO DO: Implement the confirmation dialog box. For now, we\r\n  //present alert box placeholder\r\n  confirmDelete = (id) => {\r\n    var result = window.confirm(\"Want to delete?\");\r\n    if (result) {\r\n        this.props.setDeleteId(id);\r\n    }\r\n  }\r\n\r\n\r\n  //renderTable -- render an HTML table displaying the rounds logged\r\n  //by the current user and providing buttons to view/edit and delete each round.\r\n  renderTable = () => {\r\n  let table = [];\r\n\r\n  if (this.props.toSearch.length <= 1) { \r\n    for (const r in this.props.rounds) {\r\n      table.push(\r\n        <tr key={r}>\r\n          <td>{this.props.rounds[r].date}</td>\r\n          <td>{this.props.rounds[r].title}</td>\r\n          <td>{(Number(this.props.rounds[r].graphics) + \r\n                Number(this.props.rounds[r].minutes)) +\r\n                \":\" + this.props.rounds[r].seconds + \" (\" + \r\n                this.props.rounds[r].graphics + \r\n                \" in \" + this.props.rounds[r].minutes + \":\" + \r\n                this.props.rounds[r].seconds + \")\"}\r\n          </td>\r\n          <td><button onClick={this.props.menuOpen ? null : () => \r\n            this.editRound(r)}>\r\n                <span className=\"fa fa-eye\"></span></button></td>\r\n          <td><button onClick={this.props.menuOpen ? null : \r\n            () => this.confirmDelete(r)}>\r\n                <span className=\"fa fa-trash\"></span></button></td>\r\n        </tr> \r\n      );\r\n    }\r\n  }\r\n  else {\r\n    let val = this.props.toSearch.toUpperCase();\r\n    for (const r in this.props.rounds) {\r\n\r\n      if (this.props.rounds[r].course.toUpperCase().indexOf(val) > -1) {\r\n        table.push(\r\n          <tr key={r}>\r\n            <td>{this.props.rounds[r].date}</td>\r\n            <td>{this.props.rounds[r].title}</td>\r\n            <td>{(Number(this.props.rounds[r].graphics) + \r\n                  Number(this.props.rounds[r].minutes)) +\r\n                  \":\" + this.props.rounds[r].seconds + \" (\" + \r\n                  this.props.rounds[r].graphics + \r\n                  \" in \" + this.props.rounds[r].minutes + \":\" + \r\n                  this.props.rounds[r].seconds + \")\"}\r\n            </td>\r\n            <td><button onClick={this.props.menuOpen ? null : () => \r\n              this.editRound(r)}>\r\n                  <span className=\"fa fa-eye\"></span></button></td>\r\n            <td><button onClick={this.props.menuOpen ? null : \r\n              () => this.confirmDelete(r)}>\r\n                  <span className=\"fa fa-trash\"></span></button></td>\r\n          </tr> \r\n        );\r\n      } else {\r\n        \r\n      }\r\n    }\r\n  }\r\n  return table;\r\n  }\r\n\r\n  //render--render the entire rounds table with header, displaying a \"No\r\n  //Rounds Logged\" message in case the table is empty.\r\n  render() {\r\n    return(\r\n    <div className=\"padded-page\">\r\n      <h1></h1>\r\n      <table className=\"table table-hover\">\r\n        <thead className=\"thead-light\">\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Course</th>\r\n          <th>Score</th>\r\n          <th>View/Edit...</th>\r\n          <th>Delete</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.keys(this.props.rounds).length === 0 ? \r\n          <tr>\r\n          <td colSpan=\"5\" style={{fontStyle: \"italic\"}}>No rounds logged</td>\r\n          </tr> : this.renderTable()\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RoundsTable;\r\n","import React from 'react';\r\nimport AppMode from './../AppMode.js';\r\n\r\nclass RoundForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //Create date object for today, taking time zone into consideration\r\n        let today = new Date(Date.now()-(new Date()).getTimezoneOffset()*60000);\r\n        //store date as ISO string\r\n        if (this.props.mode === AppMode.ROUNDS_LOGROUND) {\r\n            //If logging a new round, the starting state is a default round with\r\n            //today's date.\r\n            this.state = {date:  today.toISOString().substr(0,10), \r\n                        title: \"\",\r\n                        type: \"campaign\",\r\n                        gameplay: \"5\",\r\n                        graphics: 10,\r\n                        minutes: 50,\r\n                        seconds: \"00\",\r\n                        notes: \"\",\r\n                        faIcon: \"fa fa-save\",\r\n                        btnLabel: \"Save Round Data\"}\r\n        } else {\r\n            //if editing an existing round, the starting state is the round's\r\n            //current data\r\n            this.state = this.props.startData;\r\n            this.state.faIcon = \"fa fa-edit\";\r\n            this.state.btnLabel = \"Update Round Data\";\r\n        }\r\n    }\r\n  \r\n  \r\n    handleChange = (event) => {\r\n        const name = event.target.name;\r\n        if (name === \"seconds\") {\r\n          let newSec = (event.target.value.length < 2 ? \"0\" + \r\n            event.target.value : event.target.value);\r\n          let newSGS = this.computeSGS(this.state.graphics, this.state.minutes, \r\n                                       newSec);\r\n          this.setState({seconds: newSec, SGS: newSGS});\r\n        } else if (name === \"graphics\") {\r\n          let newgraphics = event.target.value;\r\n          let newSGS = this.computeSGS(newgraphics, this.state.minutes, \r\n            this.state.seconds);\r\n          this.setState({graphics: newgraphics, SGS: newSGS});\r\n        } else if (name === \"minutes\") {\r\n            let newMin = event.target.value;\r\n            let newSGS = this.computeSGS(this.state.graphics, newMin, \r\n              this.state.seconds);\r\n            this.setState({minutes: newMin, SGS: newSGS});\r\n        } else {\r\n          this.setState({[name]: event.target.value});\r\n        }\r\n    }\r\n  \r\n  \r\n    //handleSubmit -- When the user clicks on the button to save/update the\r\n    //round, start the spinner and invoke the parent component's saveRound\r\n    //method to do the actual work. Note that saveRound is set to the correct\r\n    //parent method based on whether the user is logging a new round or editing\r\n    //an existing round.\r\n    handleSubmit = (event) => {\r\n        //start spinner\r\n        this.setState({faIcon: \"fa fa-spin fa-spinner\",\r\n                        btnLabel: (this.props.mode === AppMode.ROUNDS_LOGROUND ? \r\n                                    \"Saving...\" : \"Updating...\")});\r\n        //Prepare current round data to be saved\r\n        let roundData = this.state;\r\n        delete roundData.faIcon;\r\n        delete roundData.btnLabel;\r\n        //call saveRound on 1 second delay to show spinning icon\r\n        setTimeout(this.props.saveRound,1000,roundData); \r\n        event.preventDefault(); \r\n        }\r\n  \r\n\r\n    computeSGS = (graphics, min, sec) => {\r\n      return (Number(graphics) + Number(min)) \r\n                  + \":\" + sec;\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <form className=\"padded-page\" onSubmit={this.handleSubmit}>\r\n          <center>\r\n            <label>\r\n              Date:\r\n              <input name=\"date\" className=\"form-control form-center\" \r\n                type=\"date\" value={this.state.date} onChange={this.handleChange} />\r\n            </label>\r\n            <p></p>\r\n            <label>\r\n              Game Title:\r\n              <input name=\"title\" className=\"form-control form-center\" type=\"text\"\r\n                value={this.state.title} onChange={this.handleChange}\r\n                placeholder=\"Game Title\" size=\"50\" maxLength=\"50\" />\r\n            </label>\r\n          <p></p>\r\n          <label>Type:\r\n          <select name=\"type\" value={this.state.type} \r\n            className=\"form-control form-center\" onChange={this.handleChange}>\r\n            <option value=\"campaign\">Campaign</option>\r\n            <option value=\"multiplayer\">multiplayer</option>\r\n          </select> \r\n          </label>\r\n          <p></p>\r\n          <label>Gameplay:\r\n          <select name=\"gameplay\" value={this.state.gameplay} \r\n            className=\"form-control form-center\" onChange={this.handleChange}>\r\n            <option value=\"1\">1</option>\r\n            <option value=\"2\">2</option>\r\n            <option value=\"3\">3</option>\r\n            <option value=\"4\">4</option>\r\n            <option value=\"5\">5</option>\r\n          </select> \r\n          </label>\r\n          <p></p>\r\n          <label>Graphics:\r\n          <input name=\"graphics\" className=\"form-control form-center\" type=\"number\" \r\n            min=\"1\" max=\"10\" value={this.state.graphics} \r\n            onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <label>Time: <br></br>\r\n          <input name=\"minutes\" type=\"number\" size=\"3\"\r\n            min=\"10\" max=\"400\" value={this.state.minutes}\r\n            onChange={this.handleChange} />:  \r\n          <input name=\"seconds\" type=\"number\" size=\"2\"\r\n            min=\"0\" max=\"60\" value={this.state.seconds} \r\n            onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <label>Game Score: <br></br>\r\n              <input name=\"SGS\" className=\"form-center\" type=\"text\" size=\"6\" \r\n                disabled={true} value={this.state.SGS} />\r\n          </label>\r\n          <p></p>\r\n          <label>Notes:\r\n              <textarea name=\"notes\" className=\"form-control\" rows=\"6\" cols=\"75\" \r\n                placeholder=\"Enter round notes\" value={this.state.notes} \r\n                onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <p></p>\r\n          <button type=\"submit\" style={{width: \"70%\",fontSize: \"36px\"}} \r\n            className=\"btn btn-primary btn-color-theme\">\r\n              <span className={this.state.faIcon}/>&nbsp;{this.state.btnLabel}\r\n          </button>\r\n          </center>\r\n        </form>\r\n      );\r\n    }\r\n}\r\n\r\nexport default RoundForm;","import React from 'react';\r\n\r\nclass SearchBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n            this.state = {\r\n                searchValue : \"\"\r\n            }\r\n\r\n    }\r\n    handleChange = (event) => {\r\n        const name = event.target.name;\r\n        this.setState({[name]: event.target.value});\r\n        this.props.search(this.state.searchValue);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"input-group center-search\" style={{marginTop : \"70px\"}}>\r\n            <input name=\"searchValue\" className=\"form-control py-2 border-left-0 border\" type=\"text\" value={this.state.searchValue} onChange={this.handleChange} placeholder=\"Search Rounds\"></input>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBox;","//Rounds -- A parent component for the app's \"rounds\" mode.\r\n//Manages the rounds data for the current user and conditionally renders the\r\n//appropriate rounds mode page based on App's mode, which is passed in as a prop.\r\n\r\nimport React from 'react';\r\nimport AppMode from './../AppMode.js';\r\nimport RoundsTable from './RoundsTable.js';\r\nimport RoundForm from './RoundForm.js';\r\nimport FloatingButton from './FloatingButton.js';\r\nimport SearchBox from './SearchBox.js';\r\n\r\nclass Rounds extends React.Component {\r\n\r\n    //Initialize a Rounds object based on local storage\r\n    constructor(props) {\r\n            super(props);\r\n            let data = JSON.parse(localStorage.getItem(this.props.userId)); \r\n            if (data == null) { //no data yet for this user -- create empty record\r\n                data = {games: {},\r\n                        gameCount: 0};  \r\n                localStorage.setItem(this.props.userId,JSON.stringify(data));\r\n            }\r\n            this.state = {games: data.games,\r\n                          gameCount: data.gameCount,\r\n                          deleteId: \"\",\r\n                          editId: \"\",\r\n                          searchInput: \"\"};           \r\n        }\r\n\r\n    //addRound -- Given an object newData containing a new round, add the round\r\n    //to the current user's list of rounds, commit to local storage, and toggle\r\n    //the mode back to AppMode.ROUNDS since the user is done adding a round.\r\n    addRound = (newData) => {\r\n        let data = JSON.parse(localStorage.getItem(this.props.userId));\r\n        data.games[++data.gameCount] = newData;\r\n        localStorage.setItem(this.props.userId, JSON.stringify(data));\r\n        this.setState({games: data.games, gameCount: data.gameCount});\r\n        this.props.changeMode(AppMode.ROUNDS);\r\n    }\r\n\r\n    //editRound -- Given an object newData containing updated data on an\r\n    //existing round, update the current user's round uniquely identified by\r\n    //this.state.editId, commit to local storage, reset editId to empty and\r\n    //toggle the mode back to AppMode.ROUNDS since the user is done editing the\r\n    //round. \r\n    editRound = (newData) => {\r\n        let data = JSON.parse(localStorage.getItem(this.props.userId)); \r\n        data.games[this.state.editId] = newData;\r\n        localStorage.setItem(this.props.userId, JSON.stringify(data));\r\n        this.setState({games: data.games, editId: \"\"});\r\n        this.props.changeMode(AppMode.ROUNDS);\r\n    }\r\n\r\n    //deleteRound -- Delete the current user's round uniquely identified by\r\n    //this.state.deleteId, commit to local storage, and reset deleteId to empty.\r\n    deleteRound = (val) => {\r\n        let data = JSON.parse(localStorage.getItem(this.props.userId));\r\n        delete data.games[val];\r\n        console.log(val);\r\n        data.gameCount = data.gameCount - 1;\r\n        localStorage.setItem(this.props.userId,JSON.stringify(data));\r\n        this.setState({games: data.games, deleteId: \"\"});\r\n    }  \r\n\r\n    //setDeleteId -- Capture in this.state.deleteId the unique id of the item\r\n    //the user is considering deleting.\r\n    setDeleteId = (val) => {\r\n        console.log(val);\r\n        this.setState({deleteId: val});\r\n        this.deleteRound(val);\r\n    }\r\n\r\n    //setEditId -- Capture in this.state.editId the unique id of the item\r\n    //the user is considering editing.\r\n    setEditId = (val) => {\r\n        this.setState({editId: val});\r\n    }\r\n\r\n    search = (val) => {\r\n        this.setState({searchInput: val});\r\n    }\r\n    \r\n    //render -- Conditionally render the Rounds mode page as either the rounds\r\n    //table, the rounds form set to obtain a new round, or the rounds form set\r\n    //to edit an existing round.\r\n    render() {\r\n        switch(this.props.mode) {\r\n            case AppMode.ROUNDS:\r\n                return (\r\n                    <>\r\n                    <SearchBox\r\n                    search={this.search}/>\r\n                    <RoundsTable \r\n                    rounds={this.state.games}\r\n                    setEditId={this.setEditId}\r\n                    setDeleteId={this.setDeleteId}\r\n                    changeMode={this.props.changeMode}\r\n                    menuOpen={this.props.menuOpen}\r\n                    toSearch = {this.state.searchInput} /> \r\n                    <FloatingButton\r\n                        handleClick={() => \r\n                        this.props.changeMode(AppMode.ROUNDS_LOGROUND)}\r\n                        menuOpen={this.props.menuOpen}\r\n                        icon={\"fa fa-plus\"} />\r\n                    </>\r\n                );\r\n            case AppMode.ROUNDS_LOGROUND:\r\n                return (\r\n                    <RoundForm\r\n                        mode={this.props.mode}\r\n                        startData={\"\"} \r\n                        saveRound={this.addRound} />\r\n                );\r\n            case AppMode.ROUNDS_EDITROUND:\r\n                return (\r\n                    <RoundForm\r\n                        mode={this.props.mode}\r\n                        startData={this.state.games[this.state.editId]} \r\n                        saveRound={this.editRound} />\r\n                );\r\n        }\r\n    }\r\n\r\n}   \r\n\r\nexport default Rounds;\r\n","import React from 'react';\r\n\r\nclass CoursesPage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"padded-page\">\r\n            <center>\r\n            <h1 >Family</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default CoursesPage;","import React from 'react';\r\nimport NavBar from './NavBar.js';\r\nimport SideMenu from './SideMenu.js';\r\nimport ModeBar from './ModeBar.js';\r\nimport FloatingButton from './FloatingButton.js';\r\nimport LoginPage from './LoginPage.js';\r\nimport AppMode from \"./../AppMode.js\"\r\nimport FeedPage from './FeedPage.js';\r\nimport Rounds from './Rounds.js';\r\nimport CoursesPage from './CoursesPage.js';\r\nimport Modal from 'react-modal';\r\n\r\n\r\nconst modeTitle = {};\r\nmodeTitle[AppMode.LOGIN] = \"Welcome\";\r\nmodeTitle[AppMode.FEED] = \"About me\";\r\nmodeTitle[AppMode.FEED_INTERESTS] = \"Interests\";\r\nmodeTitle[AppMode.FEED_SCHOOL] = \"School\";\r\nmodeTitle[AppMode.ROUNDS] = \"Games\";\r\nmodeTitle[AppMode.ROUNDS_LOGROUND] = \"Log New Game\";\r\nmodeTitle[AppMode.ROUNDS_EDITROUND] = \"Edit Game\";\r\nmodeTitle[AppMode.COURSES] = \"Family\";\r\n\r\nconst modeToPage = {};\r\nmodeToPage[AppMode.LOGIN] = LoginPage;\r\nmodeToPage[AppMode.FEED] = FeedPage;\r\nmodeToPage[AppMode.FEED_INTERESTS] = FeedPage;\r\nmodeToPage[AppMode.FEED_SCHOOL] = FeedPage;\r\nmodeToPage[AppMode.ROUNDS] = Rounds;\r\nmodeToPage[AppMode.ROUNDS_LOGROUND] = Rounds;\r\nmodeToPage[AppMode.ROUNDS_EDITROUND] = Rounds;\r\nmodeToPage[AppMode.COURSES] = CoursesPage;\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {mode: AppMode.LOGIN,\r\n                  menuOpen: false,\r\n                  userId: \"\",\r\n                  modalOpen: false};\r\n  }\r\n\r\n  handleChangeMode = (newMode) => {\r\n    console.log(newMode);\r\n    this.setState({mode: newMode});\r\n  }\r\n\r\n  openMenu = () => {\r\n    this.setState({menuOpen : true});\r\n\r\n  }\r\n  \r\n  closeMenu = () => {\r\n    this.setState({menuOpen : false});\r\n  }\r\n\r\n  toggleMenuOpen = () => {\r\n    this.setState(prevState => ({menuOpen: !prevState.menuOpen}));\r\n  }\r\n\r\n  setUserId = (Id) => {\r\n    this.setState({userId: Id});\r\n  }\r\n\r\n  openModal = () => {\r\n    this.setState({modalOpen : true});\r\n  }\r\n  \r\n  closeModal = () => {\r\n    this.setState({modalOpen : false});\r\n  }\r\n  chooseItem = (item ) => {\r\n    if(item == \"About\") {\r\n      this.openModal();\r\n    }\r\n    \r\n  }\r\n\r\n  render() {\r\n    const ModePage = modeToPage[this.state.mode];\r\n    return (\r\n      <div >\r\n        <NavBar \r\n          title={modeTitle[this.state.mode]} \r\n          mode={this.state.mode}\r\n          changeMode={this.handleChangeMode}\r\n          menuOpen={this.state.menuOpen}\r\n          modalOpen = {this.state.modalOpen}\r\n          toggleMenuOpen={this.toggleMenuOpen}/>\r\n          <SideMenu \r\n            menuOpen = {this.state.menuOpen}\r\n            modalOpen = {this.state.modalOpen}\r\n            mode={this.state.mode}\r\n            changeMode={this.handleChangeMode}\r\n            toggleMenuOpen={this.toggleMenuOpen}\r\n            userId={this.state.userId}\r\n            logOut={() => this.handleChangeMode(AppMode.LOGIN)}\r\n            sideChosen={this.chooseItem}\r\n            showAbout = {() => this.openModal}/>\r\n          <ModeBar \r\n            mode={this.state.mode } \r\n            changeMode={this.handleChangeMode}\r\n            menuOpen={this.state.menuOpen}\r\n            modalOpen = {this.state.modalOpen}/>\r\n          <ModePage \r\n            menuOpen={this.state.menuOpen}\r\n            modalOpen = {this.state.modalOpen}\r\n            mode={this.state.mode}\r\n            changeMode={this.handleChangeMode}\r\n            userId={this.state.userId}\r\n            setUserId={this.setUserId}/>\r\n            <Modal\r\n            isOpen={this.state.modalOpen}\r\n            onRequestClose={this.openModal}\r\n            contentLabel=\"My dialog\"\r\n            className=\"mymodal\"\r\n            overlayClassName=\"myoverlay\"\r\n            closeTimeoutMS={500}\r\n          >\r\n          <div id=\"aboutModal\" className=\"mymodal\" role=\"dialog\">\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <center>\r\n                    <h3 className=\"modal-title\"><b>About SpeedScore</b>\r\n                        <button id=\"modalClose\" className=\"close\" onClick={this.closeModal}>\r\n                        &times;</button>\r\n                    </h3>\r\n                    </center>      \r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <center>\r\n                    <img\r\n                    src=\"https://dl.dropboxusercontent.com/s/awuwr1vpuw1lkyl/SpeedScore4SplashLogo.png\"\r\n                    height=\"200\" width=\"200\"></img>\r\n                    <h3>The World's First and Only Suite of Apps for\r\n                    Speedgolf</h3>\r\n                    <p>Version 5 (Live), Build\r\n                    20.6.2018<br></br>\r\n                    &copy; 2017-20 The Professor of Speedgolf. All rights\r\n                    reserved.</p>\r\n                    </center>\r\n                    <p>SpeedScore apps support</p>\r\n                    <ul>\r\n                    <li>live touranment scoring (<i>SpeedScore Live&reg;</i>)</li>\r\n                    <li>tracking personal speedgolf rounds and sharing results\r\n                    (<i>SpeedScore Track&reg;</i>)</li>\r\n                    <li>finding speedgolf-friendly courses, booking tee times, and\r\n                    paying to play speedgolf by the minute (<i>SpeedScore\r\n                    Play&reg;</i>)</li>\r\n                    </ul>\r\n                    <p>SpeedScore was first developed by Dr. Chris Hundhausen,\r\n                    associate professor of computer science at Washington State\r\n                    University and the <i>Professor of Speedgolf</i>, with support\r\n                    from Scott Dawley, CEO of Speedgolf USA, LLC. It leverages\r\n                    Google server-side technologies.</p>\r\n                    <p>For more information on SpeedScore, visit <a\r\n                    href=\"http://speedscore.live\" target=\"_blank\">SpeedScore's web\r\n                    site</a>. For more information on speedgolf, visit <a\r\n                    href=\"http://playspeedgolf.com\"\r\n                    target=\"_blank\">playspeedgolf.com</a> and <a\r\n                    href=\"http://usaspeedgolf.com\" target=\"_blank\">Speedgolf\r\n                    USA</a>.</p>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                        <button id=\"aboutOK\" className=\"close\" onClick={this.closeModal}>\r\n                        OK</button>\r\n                </div>\r\n              </div>\r\n          </div>\r\n      </Modal>\r\n\r\n      </div>\r\n    );  \r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './styles/index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}